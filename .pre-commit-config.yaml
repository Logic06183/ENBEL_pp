# ENBEL Pre-commit Configuration
# ===============================
# Automated code quality checks before commits

repos:
  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=88]
        exclude: ^(archive/|docs/_build/)

  # Import sorting
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=88]
        exclude: ^(archive/|docs/_build/)

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503,E501]
        exclude: ^(archive/|docs/_build/)

  # Type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-PyYAML, types-requests]
        args: [--ignore-missing-imports, --no-strict-optional]
        exclude: ^(tests/|archive/|docs/_build/)

  # Security scanning
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-r, -f, json, -o, bandit-report.json]
        exclude: ^(tests/|archive/|docs/_build/)

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      # Remove trailing whitespace
      - id: trailing-whitespace
        exclude: ^(archive/|docs/_build/)
      
      # Ensure files end with newline
      - id: end-of-file-fixer
        exclude: ^(archive/|docs/_build/)
      
      # Check for merge conflicts
      - id: check-merge-conflict
      
      # Check YAML syntax
      - id: check-yaml
        exclude: ^(archive/)
      
      # Check JSON syntax
      - id: check-json
        exclude: ^(archive/)
      
      # Check for large files
      - id: check-added-large-files
        args: [--maxkb=10000]  # 10MB limit
      
      # Check Python AST
      - id: check-ast
        exclude: ^(archive/|docs/_build/)
      
      # Check for private keys
      - id: detect-private-key
      
      # Check for AWS credentials
      - id: detect-aws-credentials
        args: [--allow-missing-credentials]

  # Documentation checks
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=numpy]
        exclude: ^(tests/|archive/|docs/_build/)

  # Notebook formatting (if using Jupyter)
  - repo: https://github.com/nbQA-dev/nbQA
    rev: 1.7.0
    hooks:
      - id: nbqa-black
        exclude: ^(archive/)
      - id: nbqa-isort
        args: [--profile=black]
        exclude: ^(archive/)
      - id: nbqa-flake8
        args: [--max-line-length=88, --extend-ignore=E203,W503,E501]
        exclude: ^(archive/)

  # YAML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types: [yaml]
        exclude: ^(archive/)

  # Shell script checking
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.5
    hooks:
      - id: shellcheck
        args: [-x]

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Requirements.txt checking
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        args: [--json, --output, safety-report.json]

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: ^(archive/|docs/_build/)

  # Scientific Python checks
  - repo: local
    hooks:
      # Custom hook for scientific reproducibility
      - id: check-random-seeds
        name: Check random seeds are set
        entry: python scripts/check_random_seeds.py
        language: system
        files: \.py$
        exclude: ^(tests/|archive/|docs/_build/)
      
      # Custom hook for configuration validation
      - id: validate-config
        name: Validate YAML configurations
        entry: python scripts/validate_configs.py
        language: system
        files: configs/.*\.yaml$
      
      # Custom hook for test coverage
      - id: check-test-coverage
        name: Ensure minimum test coverage
        entry: python scripts/check_coverage.py
        language: system
        pass_filenames: false
        always_run: true
      
      # Custom hook for data validation
      - id: validate-data-schemas
        name: Validate data schemas
        entry: python scripts/validate_data_schemas.py
        language: system
        files: src/.*\.py$

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks
    
    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [mypy, bandit, python-safety-dependencies-check]
  submodules: false